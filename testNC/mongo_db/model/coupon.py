from mongoengine import DynamicEmbeddedDocument, DynamicDocument, EmbeddedDocumentField, IntField, ListField, StringField, EmbeddedDocumentListFieldclass DiscountConditionObj(DynamicEmbeddedDocument):    meta = {'strict': False}    product_cnt = IntField(help_text="商品折扣券打折金额")  # 优惠券使用条件, 满x件商品可用    product_ids = ListField(help_text="商品id，商品折扣券需填写")  # 优惠券使用条件, 指定商品id可用    product_price = IntField(help_text="商品价格，满减券需填写")  # 优惠券使用条件, 价格满x可用，单位分class DiscountInfoObj(DynamicEmbeddedDocument):    meta = {'strict': False}    discount_condition = EmbeddedDocumentField(DiscountConditionObj, help_text="打折情况")    discount_fee = IntField(required=True, help_text="优惠券减少金额")  # 单位分, 例如0.5元-> 50    discount_num = IntField(required=True, help_text="优惠券折扣数")  # 换算规则，5000=5折，7000=7折，范围是1000-10000，必须是100的整数class ExtInfoObj(DynamicEmbeddedDocument):    meta = {'strict': False}    invalid_time = StringField(help_text="优惠券失效时间")    jump_product_id = IntField(help_text="商品折扣券领取后跳转的商品id")    notes = StringField(help_text="备注信息")    valid_time = StringField(help_text="优惠券有效时间")class PromoteInfoObj(DynamicEmbeddedDocument):    meta = {'strict': False}    PROMOTE_TYPE_CUSTOMIZE = 2    PROMOTE_TYPES = [        PROMOTE_TYPE_CUSTOMIZE    ]    customize_channel = StringField(help_text="推广类型")  # promote_type=2时才有意义    promote_type = StringField(help_text="推广类型")class ReceiveInfoObj(DynamicEmbeddedDocument):    meta = {'strict': False}    end_time = StringField(required=True, help_text="优惠券领用结束时间")    limit_num_one_person = IntField(required=True, help_text="单人限领张数")    start_time = StringField(required=True, help_text="优惠券领用开始时间")    total_num = IntField(required=True, help_text="优惠券领用总数")class ValidInfoObj(DynamicEmbeddedDocument):    meta = {'strict': False}    # COUPON_VALID_TYPE_DAY    VALID_RANGE = 1  # 指定时间范围生效    VALID_DAYS = 2  # 生效天数    VALID_TYPES = [        VALID_RANGE,        VALID_DAYS    ]    end_time = StringField(help_text="优惠券有效期结束时间")  # ，若填了start必填,valid_type=1时才有意义    start_time = StringField(help_text="优惠券有效期开始时间")  # 和valid_day_num二选一,valid_type=1时才有意义    valid_day_num = IntField(required=True, help_text="优惠券有效期天数")  # 和start_time二选一,valid_type=2时才有意义    valid_type = StringField(required=True, help_text="优惠券有效期类型")class CouponInfoObj(DynamicEmbeddedDocument):    meta = {'strict': False}    name = StringField(help_text="优惠券名称")  # name 		是 	优惠券名称    discount_info = EmbeddedDocumentField(DiscountInfoObj, help_text="折扣情况")    ext_info = EmbeddedDocumentField(ExtInfoObj, help_text="扩展信息")    promote_info = EmbeddedDocumentField(PromoteInfoObj, help_text="推广信息")    receive_info = EmbeddedDocumentField(ReceiveInfoObj, help_text="领用情况")    valid_info = EmbeddedDocumentField(ValidInfoObj, help_text="优惠券有效信息")class StockInfoObj(DynamicEmbeddedDocument):    meta = {'strict': False}    issued_num = IntField(help_text="优惠券领用量")    receive_num = IntField(help_text="优惠券名称")    used_num = IntField(help_text="优惠券已用量")class ReceiveObj(DynamicEmbeddedDocument):    '''    每领取一张优惠券有一条纪录，且只能通过我们接口创建和分配的优惠券才在此纪录中出现。    此领用者是否使用此券，需要到order表中进行查询。    '''    meta = {'strict': False}    user_id = StringField(help_text='优惠券领用人')    open_id = StringField(help_text='优惠券领用人')    create_at = StringField(help_text='优惠券领用时间，格式:2020-12-23 12:34:56')    receive_at = StringField(help_text='优惠券被回收时间，格式:2020-12-23 12:34:56，此值存在代表被回收,为None代表未被回收。', default=None)    overdue_auto_at = StringField(help_text='优惠券过期被自动收时间，格式:2020-12-23 12:34:56，此值存在代表进行过自动回收,为None代表未被回收。', default=None)    overdue_auto_val = IntField(help_text='优惠券过期自动返还的金额', default=0)    receive_id = StringField(help_text='优惠券领用纪录ID，具有唯一性')  # 后续可能会在订单上标识出来，暂时没有    order_id = IntField(help_text='使用使用到哪个订单上')    recyclable_val = IntField(help_text='可回收的值,代表没有使用完的值(金额：分)，默认为0', default=0)    '''    #FIXME:    1. 主动取消和退款的订单，其优惠券的可回收余额将不做更新，用过期逻辑去进行回收。    2. 顺利完成的订单，其优惠券在订单同步时会进行回收。    '''class CouponModel(DynamicDocument):    """    优惠券    """    meta = {        'strict': False,        "collection": "coupons",        'indexes': [            {                "fields": ["type", "name"],                'name': '_coupon_fit_'            }        ]    }    COUPON_PRODUCT_DIS_CON = 1  # 商品条件折券, discount_condition.product_ids, discount_condition.product_cnt, discount_info.discount_num 必填    COUPON_PRODUCT_FULL_REDUCE = 2  # 商品满减券, discount_condition.product_ids, discount_condition.product_price, discount_info.discount_fee 必填    COUPON_PRODUCT_UNIFIED_DIS = 3  # 商品统一折扣券, discount_condition.product_ids, discount_info.discount_num必填    COUPON_PRODUCT_BONDS_REDUCE = 4  # 商品直减券, 如果小于可用的商品中的最小价格会提醒(没有商品时超过50w提醒）, discount_condition.product_ids, discount_fee 必填    COUPON_STORE_DIS_CON = 101  # 店铺条件折扣券, discount_condition.product_cnt, discount_info.discount_num 必填    COUPON_STORE_FULL_REDUCE = 102  # 店铺满减券, discount_condition.product_price, discount_info.discount_fee 必填    COUPON_STORE_UNIFIED_DIS = 103  # 店铺统一折扣券, discount_info.discount_num 必填    COUPON_STORE_BONDS_REDUCE = 104  # 店铺直减券, 如果小于可用的商品中的最小价格会提醒(没有商品时超过50w提醒）, discount_fee 必填    COUPON_TYPES = [        COUPON_PRODUCT_DIS_CON,        COUPON_PRODUCT_FULL_REDUCE,        COUPON_PRODUCT_UNIFIED_DIS,        COUPON_PRODUCT_BONDS_REDUCE,        COUPON_STORE_DIS_CON,        COUPON_STORE_FULL_REDUCE,        COUPON_STORE_UNIFIED_DIS,        COUPON_STORE_BONDS_REDUCE,    ]    STATUS_DRAFT = 1  # 草稿    STATUS_TAKE_EFFECT = 2  # 生效    STATUS_BE_OVERDUE = 3  # 过期    STATUS_TO_VOID = 4  # 已作废    STATUS_TO_DELETE = 5  # 删除    STATUS_OVER_OR_VOID = 200  # 过期 or 作废的券    COUPON_STATUS = [        STATUS_DRAFT,        STATUS_TAKE_EFFECT,        STATUS_BE_OVERDUE,        STATUS_TO_VOID,        STATUS_TO_DELETE,        STATUS_OVER_OR_VOID    ]    coupon_id = IntField(required=True, help_text="优惠券id")    type = IntField(required=True, choices=COUPON_TYPES, help_text="优惠券类型")    status = IntField(required=True, choices=COUPON_STATUS, help_text="优惠券状态")    create_time = StringField(help_text="创建时间")    update_time = StringField(help_text="更新时间")    coupon_info = EmbeddedDocumentField(CouponInfoObj, help_text="内容信息")    stock_info = EmbeddedDocumentField(StockInfoObj, help_text="内容信息")    total_num = IntField(help_text="优惠券总数")    receives = EmbeddedDocumentListField(ReceiveObj, help_text="优惠券领取者人员列表")    @property    def name(self):        return self.coupon_info.name    def is_shop_coupon(self):        '''        是否店铺券        :return:        '''        return self.type >= CouponModel.COUPON_STORE_DIS_CON    @property    def discount_fee(self):        '''        优惠券的面值。        FIXME: 此值只适用于直减券或立减券        :return:        '''        assert self.type in [CouponModel.COUPON_PRODUCT_FULL_REDUCE,                             CouponModel.COUPON_PRODUCT_BONDS_REDUCE,                             CouponModel.COUPON_STORE_FULL_REDUCE,                             CouponModel.COUPON_STORE_BONDS_REDUCE], "此值只适用于直减券或立减券"        return self.coupon_info.discount_info.discount_fee    @property    def discount_proudct_ids(self):        '''        优惠卷适应用的商品ID，仅商品券有聊。        :return:        '''        assert not self.is_shop_coupon(), "仅商品券有效"        return self.coupon_info.discount_info.discount_condition.product_idsclass UserCouponExtInfoObj(DynamicEmbeddedDocument):    use_time = StringField(help_text="优惠券核销时间")class UserCouponObj(DynamicEmbeddedDocument):    UCOUPON_USER_STATUS_VALID = 100  # 生效中    COUPON_USER_STATUS_EXPIRED = 101  # 已过期    COUPON_USER_STATUS_USED = 102  # 已使用    USER_COUPON_STATUS = [        UCOUPON_USER_STATUS_VALID,        COUPON_USER_STATUS_EXPIRED,        COUPON_USER_STATUS_USED    ]    meta = {'strict': False}    coupon_id = IntField(help_text="优惠券")    status = StringField(help_text="优惠券状态")    create_time = StringField(help_text="优惠券派发时间")    update_time = StringField(help_text="优惠券更新时间")    start_time = StringField(help_text="优惠券生效时间")    end_time = StringField(help_text="优惠券失效时间")    order_id = IntField(help_text="优惠券使用的订单id")    discount_fee = IntField(help_text="优惠券金额")    ext_info = EmbeddedDocumentField(UserCouponExtInfoObj, help_text="优惠券金额")class UserCouponsModel(DynamicDocument):    meta = {        'strict': False,        "collection": "user_coupons",        'indexes': [            {                "fields": ["ext_info"],                'name': '_user_coupon_fit_'            }        ]    }    openid = StringField()    coupons = EmbeddedDocumentListField(UserCouponObj, help_text="优惠券列表")